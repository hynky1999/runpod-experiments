
  0%|                                                                                                                                                                       | 0/25 [00:00<?, ?it/s][WARNING|logging.py:314] 2023-12-27 03:00:58,942 >> You're using a CodeLlamaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
{'loss': 1.4138, 'learning_rate': 1.3333333333333333e-05, 'epoch': 0.04}

  8%|████████████▋                                                                                                                                                  | 2/25 [01:07<12:36, 32.89s/it]
{'train_runtime': 94.1591, 'train_samples_per_second': 5.31, 'train_steps_per_second': 0.266, 'train_loss': 1.4756096204121907, 'epoch': 0.12}
***** train metrics *****
  epoch                    =       0.12
  train_loss               =     1.4756
  train_runtime            = 0:01:34.15
  train_samples            =        500
  train_samples_per_second =       5.31
  train_steps_per_second   =      0.266
 12%|███████████████████                                                                                                                                            | 3/25 [01:32<10:44, 29.30s/it][INFO|trainer.py:1955] 2023-12-27 03:02:31,246 >>
Training completed. Do not forget to share your model on huggingface.co/models =)
 12%|███████████████████                                                                                                                                            | 3/25 [01:32<11:17, 30.80s/it]
[INFO|trainer.py:3158] 2023-12-27 03:02:31,255 >> ***** Running Evaluation *****
[INFO|trainer.py:3160] 2023-12-27 03:02:31,255 >>   Num examples = 500
[INFO|trainer.py:3163] 2023-12-27 03:02:31,255 >>   Batch size = 5

  3%|████▋                                                                                                                                                         | 3/100 [00:04<02:51,  1.77s/it]Traceback (most recent call last):
  File "/workspace/runpod-experiments/scripts/run_sft.py", line 206, in <module>
    main()
  File "/workspace/runpod-experiments/scripts/run_sft.py", line 172, in main
    metrics = trainer.evaluate()
  File "/workspace/venv/lib/python3.10/site-packages/transformers/trainer.py", line 3011, in evaluate
    output = eval_loop(
  File "/workspace/venv/lib/python3.10/site-packages/transformers/trainer.py", line 3200, in evaluation_loop
    loss, logits, labels = self.prediction_step(model, inputs, prediction_loss_only, ignore_keys=ignore_keys)
  File "/workspace/venv/lib/python3.10/site-packages/transformers/trainer.py", line 3419, in prediction_step
    loss, outputs = self.compute_loss(model, inputs, return_outputs=True)
  File "/workspace/venv/lib/python3.10/site-packages/transformers/trainer.py", line 2748, in compute_loss
    outputs = model(**inputs)
  File "/workspace/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/accelerate/utils/operations.py", line 636, in forward
    return model_forward(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/accelerate/utils/operations.py", line 624, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/workspace/venv/lib/python3.10/site-packages/torch/amp/autocast_mode.py", line 16, in decorate_autocast
    return func(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/peft/peft_model.py", line 1003, in forward
    return self.base_model(
  File "/workspace/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/peft/tuners/tuners_utils.py", line 106, in forward
    return self.model.forward(*args, **kwargs)
  File "/workspace/venv/lib/python3.10/site-packages/transformers/models/llama/modeling_llama.py", line 1058, in forward
    shift_logits = logits[..., :-1, :].contiguous()
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.22 GiB. GPU 0 has a total capacty of 23.69 GiB of which 1010.69 MiB is free. Process 302602 has 22.70 GiB memory in use. Of the allocated memory 20.77 GiB is allocated by PyTorch, and 1.61 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF